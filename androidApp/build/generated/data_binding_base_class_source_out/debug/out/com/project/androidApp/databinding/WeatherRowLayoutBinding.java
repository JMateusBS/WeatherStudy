// Generated by view binder compiler. Do not edit!
package com.project.androidApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.project.androidApp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WeatherRowLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView prevDate;

  @NonNull
  public final TextView prevMain;

  @NonNull
  public final TextView prevMaxTemperature;

  @NonNull
  public final TextView prevMinTemperature;

  @NonNull
  public final ImageView prevWeatherIcon;

  private WeatherRowLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView prevDate,
      @NonNull TextView prevMain, @NonNull TextView prevMaxTemperature,
      @NonNull TextView prevMinTemperature, @NonNull ImageView prevWeatherIcon) {
    this.rootView = rootView;
    this.prevDate = prevDate;
    this.prevMain = prevMain;
    this.prevMaxTemperature = prevMaxTemperature;
    this.prevMinTemperature = prevMinTemperature;
    this.prevWeatherIcon = prevWeatherIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WeatherRowLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WeatherRowLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.weather_row_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WeatherRowLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.prev_date;
      TextView prevDate = rootView.findViewById(id);
      if (prevDate == null) {
        break missingId;
      }

      id = R.id.prev_main;
      TextView prevMain = rootView.findViewById(id);
      if (prevMain == null) {
        break missingId;
      }

      id = R.id.prev_max_temperature;
      TextView prevMaxTemperature = rootView.findViewById(id);
      if (prevMaxTemperature == null) {
        break missingId;
      }

      id = R.id.prev_min_temperature;
      TextView prevMinTemperature = rootView.findViewById(id);
      if (prevMinTemperature == null) {
        break missingId;
      }

      id = R.id.prev_weather_icon;
      ImageView prevWeatherIcon = rootView.findViewById(id);
      if (prevWeatherIcon == null) {
        break missingId;
      }

      return new WeatherRowLayoutBinding((ConstraintLayout) rootView, prevDate, prevMain,
          prevMaxTemperature, prevMinTemperature, prevWeatherIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
